---
swagger: "2.0"
info:
  description: "Serverless API endpoints for the Monitoring MTL project."
  version: "0.1"
  title: "Serverless API"
  contact:
    email: "info@monitoringMTL.io"
host: "94z4jf0434.execute-api.us-east-1.amazonaws.com"
basePath: "/prod/api/v1"
tags:
  - name: "trips"
    description: "Everything about STM trips"
    externalDocs:
      description: "More info"
      url: "https://www.stm.info/fr/infos"
  - name: "routes"
    description: "All about STM bus routes"
  - name: "shapes"
    description: "All required data to draw bus lines on map"
    externalDocs:
      description: "More info"
      url: "https://developers.google.com/transit/gtfs/reference#shapestxt"
  - name: "stops"
    description: "All about every stops available"
    externalDocs:
      description: "More info"
      url: "https://www.stm.info/fr/infos"
schemes:
  - "https"
paths:
  /trips:
    get:
      tags:
        - "trips"
      summary: "Get all trips"
      description: ""
      produces:
        - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            items:
              $ref: "#/definitions/Trips"
  /trips/{tripId}:
    get:
      tags:
        - "trips"
      summary: "Get a trip by id"
      description: ""
      consumes:
        - "path parameters: tripId"
      produces:
        - "application/json"
      parameters:
        - name: "tripId"
          in: "path"
          description: "Trip ID of trip your trying to get"
          required: true
          type: "integer"
          format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Trips"

        404:
          description: "Trip not found"

  /routes:
    get:
      tags:
        - "routes"
      summary: "Get all routes"
      description: ""
      produces:
        - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            items:
              $ref: "#/definitions/Routes"

  /routes/{routeId}/:
    get:
      tags:
        - "routes"
      summary: "Find route by id"
      produces:
        - "application/json"
      parameters:
        - name: "routeId"
          in: "path"
          description: "ID of route that needs to be fetched"
          required: true
          type: "integer"
          maximum: 999
          minimum: 1
          format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Routes"
        404:
          description: "Route not found"

  /shapes:
    get:
      tags:
        - "shapes"
      summary: "Returns the full list of shapes"
      description: "A shape is a liste of shapes to draw a route on a map"
      produces:
        - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Shapes"

  /shapes/{shapeId}:
    get:
      tags:
        - "shapes"
      summary: "Returns the array object containing all the shapes of the provided shapeId"
      description: ""
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "shapeId"
          type: "integer"
          description: "List of user object"
          required: true
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Shapes"

        404:
          description: "Shape not found"

  /stops:
    get:
      tags:
        - "stops"
      summary: "Returns all stops"
      description: ""
      produces:
        - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            items:
              $ref: "#/definitions/Stops"

  /stops/{stopId}:
    get:
      tags:
        - "stops"
      summary: "Get the stop matching the specified Id"
      description: ""
      produces:
        - "application/json"
      parameters:
        - name: "stopId"
          in: "path"
          description: "The stop id"
          required: true
          type: "integer"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Stops"

        404:
          description: "Stop not found"

definitions:
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"

  Trips:
    type: "object"
    required:
      - "route_id"
      - "service_id"
      - "trip_id"
      - "trip_headsign"
      - "direction_id"
      - "shape_id"
      - "wheelchair_accessible"
    properties:
      route_id:
        type: "integer"
        format: "int64"
        example: 5
      service_id:
        type: "string"
        example: "23S-GLOBAUX-00-S"
      trip_id:
        type: "integer"
        format: "int64"
        example: 265937677
      trip_headsign:
        type: "string"
      direction_id:
        type: "integer"
        format: "int64"
      shape_id:
        type: "integer"
        format: "int64"
        example: 51763
      wheelchair_accessible:
        type: "integer"
        format: "int64"
        example: 1
      note_fr:
        type: "string"
      note_en:
        type: "string"
  Routes:
    type: "object"
    required:
      - route_id
      - agency_id
      - route_short_name
      - route_long_name
      - route_type
      - route_url
      - route_color
    properties:
      route_id:
        type: "integer"
        format: "int64"
        example: 1
      agency_id:
        type: "string"
        example: "STM"
      route_short_name:
        type: "integer"
        format: "int64"
        example: 1
      route_long_name:
        type: "string"
        example: "Ligne 1 - Verte"
      route_type:
        type: "integer"
        example: 1
      route_url:
        type: "string"
        example: "http://www.stm.info/fr/infos/reseaux/metro/verte"
      route_color:
        type: "string"
        example: D95700
        description: "Hex color code"
      route_text_color:
        type: "integer"
        format: "int64"
        example: 0

  Shapes:
    type: "object"
    required:
      - shape_id
      - shape_pt_lat
      - shape_pt_lon
      - shape_pt_sequence
    properties:
      shape_id:
        type: "integer"
        format: "int64"
        example: 11071
      shape_pt_lat:
        type: "integer"
        format: "int64"
        example: 45.446466
      shape_pt_lon:
        type: "integer"
        format: "int64"
        example: -73.603118
      shape_pt_sequence:
        type: "integer"
        format: "int64"
        example: 10001

  Stops:
    type: "object"
    required:
      - stop_id
      - stop_code
      - stop_name
      - stop_lat
      - stop_lon
      - location_type
      - wheelchair_accessible

    properties:
      stop_id:
        type: "string"
        example: "STATION_M118"
      stop_code:
        type: "integer"
        format: "int64"
        example: 10118
      stop_name:
        type: "string"
        example: "STATION AGRIGNON"
      stop_lat:
        type: "integer"
        format: "int64"
        example: 45.446466
      stop_lon:
        type: "integer"
        format: "int64"
        example: -73.603118
      stop_url:
        type: "string"
        example: ""
      location_type:
        type: "integer"
        format: "int64"
        example: 1
      parent_station:
        type: "string"
        example: ""
      wheelchair_accessible:
        type: "integer"
        format: "int32"
        example: 1

externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
